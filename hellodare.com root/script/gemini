// playlist.js -> Video Class

async initialize() {
    console.log(`[Video ${this.id}] Starting initialize...`);
    try {
        // Fetch data using the NEW oEmbed fetchVimeoData function
        const data = await this.fetchVimeoData(this.id);

        // Check if data was successfully fetched and has necessary properties
        if (data && data.width > 0 && data.height > 0 && data.thumbnail_url) {
            console.log(`[Video ${this.id}] Using oEmbed data. W=${data.width}, H=${data.height}, Thumb=${data.thumbnail_url}`);

            // --- Use oEmbed properties ---
            this.nativeWidth = data.width;       // oEmbed provides video dimensions
            this.nativeHeight = data.height;     // oEmbed provides video dimensions
            this.thumbnailUrl = data.thumbnail_url; // Use the higher-quality thumbnail URL

            // Calculate aspect ratio from fetched dimensions
            this.aspectRatio = this.getAspectRatio(this.nativeWidth, this.nativeHeight);

            // Construct iframe src (keep this part the same)
            this.iframeSrc = `https://player.vimeo.com/video/${this.id}?muted=1&controls=0&quality=1080p`;

        } else {
            // Fallback if oEmbed data is invalid or missing required fields
            console.warn(`[Video ${this.id}] Using default 16:9 aspect ratio and no thumbnail due to invalid/missing oEmbed data. Data received:`, data);
            this.nativeWidth = 16; // Default
            this.nativeHeight = 9;  // Default
            this.aspectRatio = 16 / 9;
            this.thumbnailUrl = ''; // No reliable thumbnail
            this.iframeSrc = `https://player.vimeo.com/video/${this.id}?muted=1&controls=0&quality=1080p`;
        }
    } catch (error) {
        // Catch errors specifically from the initialize logic (fetch errors handled in fetchVimeoData)
        console.error(`[Video ${this.id}] Error during initialize logic:`, error);
        // Set safe defaults on error
        this.nativeWidth = 16;
        this.nativeHeight = 9;
        this.aspectRatio = 16 / 9;
        this.thumbnailUrl = '';
        this.iframeSrc = `https://player.vimeo.com/video/${this.id}?muted=1&controls=0&quality=1080p`;
    }
    console.log(`[Video ${this.id}] Finished initialize.`);
}